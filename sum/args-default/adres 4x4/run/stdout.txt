make: Entering directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
'cgrame'  --cpp 2 --arch-opts 'cols=4 rows=4' -g graph_loop.dot

CGRA - Modelling and Exploration Version 1.0 (http://cgra-me.ece.utoronto.ca/)
Copyright (c) 2015-2018 University of Toronto. All Rights Reserved.
For research and academic purposes only. Commercial use is prohibited.
Please email questions to: Xander Chin(xan@ece.utoronto.ca)
Compiled: May 16 2018 17:25:18

[INFO] Creating Architecture #2 from C++...
[INFO] Architecture Name: Adres CGRA Architecture
[INFO] Overwritting C++ Architecture Parameter: cols to 4 (Default: 4)
[INFO] Overwritting C++ Architecture Parameter: rows to 4 (Default: 4)
[INFO] Creating "Adres CGRA Architecture" Architecture from C++...
[INFO] Parsing DFG...
[INFO] Creating Mapper...
[INFO] Gurobi ILP Solver Specified
[INFO] Mapping DFG Onto CGRA Architecture...
Optimize a model with 16343 rows, 11720 columns and 43996 nonzeros
Variable types: 0 continuous, 11720 integer (11720 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 7917 rows and 4765 columns
Presolve time: 0.09s
Presolved: 8426 rows, 6955 columns, 26132 nonzeros
Variable types: 0 continuous, 6955 integer (6955 binary)

Root relaxation: objective 4.800000e+01, 2106 iterations, 0.10 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   48.00000    0  158          -   48.00000      -     -    0s
     0     0   49.39286    0  177          -   49.39286      -     -    0s
     0     0   51.00000    0  117          -   51.00000      -     -    0s
     0     0   51.00000    0  136          -   51.00000      -     -    0s
     0     0   51.00000    0  124          -   51.00000      -     -    0s
     0     0   51.00000    0   30          -   51.00000      -     -    0s
     0     0   51.00000    0   32          -   51.00000      -     -    0s
     0     0   51.00000    0   62          -   51.00000      -     -    0s
     0     0   51.00000    0   32          -   51.00000      -     -    0s
     0     0   51.00000    0   32          -   51.00000      -     -    0s
     0     2   51.00000    0   32          -   51.00000      -     -    1s
H   98    84                     100.0000000   51.00000  49.0%   170    2s

Cutting planes:
  Gomory: 5
  MIR: 1
  Zero half: 25

Explored 99 nodes (25213 simplex iterations) in 2.87 seconds
Thread count was 4 (of 4 available processors)

Solution count 1: 100 
Pool objective bound 51

Solution limit reached
Best objective 1.000000000000e+02, best bound 5.100000000000e+01, gap 49.0000%
Gurobi Runtime: 2.869
[INFO] Suboptimal CGRA Mapping Found
MapperTimeout: 0
Mapped: 1

Operation Mapping Result:
mul0(mul): 0:pe_c1_r0.func.fu
const1(const): 0:pe_c1_r0.const.const
load2(load): 0:mem_0.mem_unit.mem
add3(add): 0:pe_c0_r0.func.fu
output4(output): 0:io_top_1.OE.io
add5(add): 0:pe_c2_r0.func.fu
const6(const): 0:pe_c2_r0.const.const

Connection Mapping Result:
load2_val_output:
  0:mem_0.mem_unit.data_out
  0:mem_0.out
  0:pe_c0_r0.func.in_a
  0:pe_c0_r0.in5
  0:pe_c0_r0.mux_a.in5
  0:pe_c0_r0.mux_a.mux
  0:pe_c0_r0.mux_a.out

add3_val_output:
  0:drf.in0
  0:drf.in3
  0:drf.out3
  0:drf.out3_m7
  0:drf.out6
  0:drf.out6_m5
  0:drf.reg2
  0:drf.reg2_fb
  0:drf.reg5
  0:drf.reg5_m3
  0:drf.reg7
  0:drf.reg7_m0
  0:io_top_1.OE.in
  0:io_top_1.in
  0:io_top_1.reg_in.in
  0:io_top_1.reg_in.out
  0:io_top_1.reg_in.reg
  0:pe_c0_r0.fu_to_rf
  0:pe_c0_r0.func.in_b
  0:pe_c0_r0.func.m_out
  0:pe_c0_r0.func.out
  0:pe_c0_r0.in1
  0:pe_c0_r0.mux_b.in1
  0:pe_c0_r0.mux_b.mux
  0:pe_c0_r0.mux_b.out
  0:pe_c1_r0.mux_out.in0
  0:pe_c1_r0.mux_out.mux
  0:pe_c1_r0.mux_out.out
  0:pe_c1_r0.out
  0:pe_c1_r0.rf_to_muxout
  0:pe_c3_r0.fu_to_rf
  0:pe_c3_r0.func.in_a
  0:pe_c3_r0.func.m_in_a
  0:pe_c3_r0.func.out
  0:pe_c3_r0.mux_a.in7
  0:pe_c3_r0.mux_a.mux
  0:pe_c3_r0.mux_a.out
  0:pe_c3_r0.rf_to_muxa

add5_val_output:
  0:drf.in2
  0:drf.out4
  0:drf.out4_m4
  0:drf.out5
  0:drf.out5_m4
  0:drf.reg1
  0:drf.reg1_fb
  0:drf.reg4
  0:drf.reg4_m2
  0:pe_c1_r0.func.in_b
  0:pe_c1_r0.in1
  0:pe_c1_r0.mux_b.in1
  0:pe_c1_r0.mux_b.mux
  0:pe_c1_r0.mux_b.out
  0:pe_c2_r0.fu_to_rf
  0:pe_c2_r0.func.in_a
  0:pe_c2_r0.func.m_out
  0:pe_c2_r0.func.out
  0:pe_c2_r0.mux_a.in7
  0:pe_c2_r0.mux_a.mux
  0:pe_c2_r0.mux_a.out
  0:pe_c2_r0.mux_out.in0
  0:pe_c2_r0.mux_out.mux
  0:pe_c2_r0.mux_out.out
  0:pe_c2_r0.out
  0:pe_c2_r0.rf_to_muxa
  0:pe_c2_r0.rf_to_muxout

const1_val_output:
  0:pe_c1_r0.const.out
  0:pe_c1_r0.func.in_a
  0:pe_c1_r0.mux_a.in6
  0:pe_c1_r0.mux_a.mux
  0:pe_c1_r0.mux_a.out

mul0_val_output:
  0:drf.in1
  0:drf.out1
  0:drf.out1_m0
  0:drf.reg0
  0:drf.reg0_m1
  0:mem_0.in0
  0:mem_0.mem_unit.addr
  0:mem_0.mux_addr.in0
  0:mem_0.mux_addr.mux
  0:mem_0.mux_addr.out
  0:pe_c0_r0.mux_out.in0
  0:pe_c0_r0.mux_out.mux
  0:pe_c0_r0.mux_out.out
  0:pe_c0_r0.out
  0:pe_c0_r0.rf_to_muxout
  0:pe_c1_r0.fu_to_rf
  0:pe_c1_r0.func.m_out
  0:pe_c1_r0.func.out

const6_val_output:
  0:pe_c2_r0.const.out
  0:pe_c2_r0.func.in_b
  0:pe_c2_r0.mux_b.in6
  0:pe_c2_r0.mux_b.mux
  0:pe_c2_r0.mux_b.out

make: Leaving directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
make: Entering directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
'cgrame'  --cpp 2 --arch-opts 'cols=4 rows=4' -g graph_loop.dot

CGRA - Modelling and Exploration Version 1.0 (http://cgra-me.ece.utoronto.ca/)
Copyright (c) 2015-2018 University of Toronto. All Rights Reserved.
For research and academic purposes only. Commercial use is prohibited.
Please email questions to: Xander Chin(xan@ece.utoronto.ca)
Compiled: May 16 2018 17:25:18

[INFO] Creating Architecture #2 from C++...
[INFO] Architecture Name: Adres CGRA Architecture
[INFO] Overwritting C++ Architecture Parameter: cols to 4 (Default: 4)
[INFO] Overwritting C++ Architecture Parameter: rows to 4 (Default: 4)
[INFO] Creating "Adres CGRA Architecture" Architecture from C++...
[INFO] Parsing DFG...
[INFO] Creating Mapper...
[INFO] Gurobi ILP Solver Specified
[INFO] Mapping DFG Onto CGRA Architecture...
Optimize a model with 16343 rows, 11720 columns and 43996 nonzeros
Variable types: 0 continuous, 11720 integer (11720 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 7917 rows and 4765 columns
Presolve time: 0.09s
Presolved: 8426 rows, 6955 columns, 26132 nonzeros
Variable types: 0 continuous, 6955 integer (6955 binary)

Root relaxation: objective 4.800000e+01, 2106 iterations, 0.11 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   48.00000    0  158          -   48.00000      -     -    0s
     0     0   49.39286    0  177          -   49.39286      -     -    0s
     0     0   51.00000    0  117          -   51.00000      -     -    0s
     0     0   51.00000    0  136          -   51.00000      -     -    0s
     0     0   51.00000    0  124          -   51.00000      -     -    0s
     0     0   51.00000    0   30          -   51.00000      -     -    0s
     0     0   51.00000    0   32          -   51.00000      -     -    0s
     0     0   51.00000    0   62          -   51.00000      -     -    0s
     0     0   51.00000    0   32          -   51.00000      -     -    0s
     0     0   51.00000    0   32          -   51.00000      -     -    0s
     0     2   51.00000    0   32          -   51.00000      -     -    1s
H   98    84                     100.0000000   51.00000  49.0%   170    2s

Cutting planes:
  Gomory: 5
  MIR: 1
  Zero half: 25

Explored 99 nodes (25213 simplex iterations) in 2.68 seconds
Thread count was 4 (of 4 available processors)

Solution count 1: 100 
Pool objective bound 51

Solution limit reached
Best objective 1.000000000000e+02, best bound 5.100000000000e+01, gap 49.0000%
Gurobi Runtime: 2.68316
[INFO] Suboptimal CGRA Mapping Found
MapperTimeout: 0
Mapped: 1

Operation Mapping Result:
mul0(mul): 0:pe_c1_r0.func.fu
const1(const): 0:pe_c1_r0.const.const
load2(load): 0:mem_0.mem_unit.mem
add3(add): 0:pe_c0_r0.func.fu
output4(output): 0:io_top_1.OE.io
add5(add): 0:pe_c2_r0.func.fu
const6(const): 0:pe_c2_r0.const.const

Connection Mapping Result:
load2_val_output:
  0:mem_0.mem_unit.data_out
  0:mem_0.out
  0:pe_c0_r0.func.in_a
  0:pe_c0_r0.in5
  0:pe_c0_r0.mux_a.in5
  0:pe_c0_r0.mux_a.mux
  0:pe_c0_r0.mux_a.out

add3_val_output:
  0:drf.in0
  0:drf.in3
  0:drf.out3
  0:drf.out3_m7
  0:drf.out6
  0:drf.out6_m5
  0:drf.reg2
  0:drf.reg2_fb
  0:drf.reg5
  0:drf.reg5_m3
  0:drf.reg7
  0:drf.reg7_m0
  0:io_top_1.OE.in
  0:io_top_1.in
  0:io_top_1.reg_in.in
  0:io_top_1.reg_in.out
  0:io_top_1.reg_in.reg
  0:pe_c0_r0.fu_to_rf
  0:pe_c0_r0.func.in_b
  0:pe_c0_r0.func.m_out
  0:pe_c0_r0.func.out
  0:pe_c0_r0.in1
  0:pe_c0_r0.mux_b.in1
  0:pe_c0_r0.mux_b.mux
  0:pe_c0_r0.mux_b.out
  0:pe_c1_r0.mux_out.in0
  0:pe_c1_r0.mux_out.mux
  0:pe_c1_r0.mux_out.out
  0:pe_c1_r0.out
  0:pe_c1_r0.rf_to_muxout
  0:pe_c3_r0.fu_to_rf
  0:pe_c3_r0.func.in_a
  0:pe_c3_r0.func.m_in_a
  0:pe_c3_r0.func.out
  0:pe_c3_r0.mux_a.in7
  0:pe_c3_r0.mux_a.mux
  0:pe_c3_r0.mux_a.out
  0:pe_c3_r0.rf_to_muxa

add5_val_output:
  0:drf.in2
  0:drf.out4
  0:drf.out4_m4
  0:drf.out5
  0:drf.out5_m4
  0:drf.reg1
  0:drf.reg1_fb
  0:drf.reg4
  0:drf.reg4_m2
  0:pe_c1_r0.func.in_b
  0:pe_c1_r0.in1
  0:pe_c1_r0.mux_b.in1
  0:pe_c1_r0.mux_b.mux
  0:pe_c1_r0.mux_b.out
  0:pe_c2_r0.fu_to_rf
  0:pe_c2_r0.func.in_a
  0:pe_c2_r0.func.m_out
  0:pe_c2_r0.func.out
  0:pe_c2_r0.mux_a.in7
  0:pe_c2_r0.mux_a.mux
  0:pe_c2_r0.mux_a.out
  0:pe_c2_r0.mux_out.in0
  0:pe_c2_r0.mux_out.mux
  0:pe_c2_r0.mux_out.out
  0:pe_c2_r0.out
  0:pe_c2_r0.rf_to_muxa
  0:pe_c2_r0.rf_to_muxout

const1_val_output:
  0:pe_c1_r0.const.out
  0:pe_c1_r0.func.in_a
  0:pe_c1_r0.mux_a.in6
  0:pe_c1_r0.mux_a.mux
  0:pe_c1_r0.mux_a.out

mul0_val_output:
  0:drf.in1
  0:drf.out1
  0:drf.out1_m0
  0:drf.reg0
  0:drf.reg0_m1
  0:mem_0.in0
  0:mem_0.mem_unit.addr
  0:mem_0.mux_addr.in0
  0:mem_0.mux_addr.mux
  0:mem_0.mux_addr.out
  0:pe_c0_r0.mux_out.in0
  0:pe_c0_r0.mux_out.mux
  0:pe_c0_r0.mux_out.out
  0:pe_c0_r0.out
  0:pe_c0_r0.rf_to_muxout
  0:pe_c1_r0.fu_to_rf
  0:pe_c1_r0.func.m_out
  0:pe_c1_r0.func.out

const6_val_output:
  0:pe_c2_r0.const.out
  0:pe_c2_r0.func.in_b
  0:pe_c2_r0.mux_b.in6
  0:pe_c2_r0.mux_b.mux
  0:pe_c2_r0.mux_b.out

make: Leaving directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
