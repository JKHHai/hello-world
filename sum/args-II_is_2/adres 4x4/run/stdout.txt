make: Entering directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
'cgrame' --II 2 --cpp 2 --arch-opts 'cols=4 rows=4' -g graph_loop.dot

CGRA - Modelling and Exploration Version 1.0 (http://cgra-me.ece.utoronto.ca/)
Copyright (c) 2015-2018 University of Toronto. All Rights Reserved.
For research and academic purposes only. Commercial use is prohibited.
Please email questions to: Xander Chin(xan@ece.utoronto.ca)
Compiled: May 16 2018 17:25:18

[INFO] Creating Architecture #2 from C++...
[INFO] Architecture Name: Adres CGRA Architecture
[INFO] Overwritting C++ Architecture Parameter: cols to 4 (Default: 4)
[INFO] Overwritting C++ Architecture Parameter: rows to 4 (Default: 4)
[INFO] Creating "Adres CGRA Architecture" Architecture from C++...
[INFO] Parsing DFG...
[INFO] Creating Mapper...
[INFO] Gurobi ILP Solver Specified
[INFO] Mapping DFG Onto CGRA Architecture...
Optimize a model with 33191 rows, 23760 columns and 89368 nonzeros
Variable types: 0 continuous, 23760 integer (23760 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 16008 rows and 9292 columns
Presolve time: 0.20s
Presolved: 17183 rows, 14468 columns, 54088 nonzeros
Variable types: 0 continuous, 14468 integer (14468 binary)

Root relaxation: objective 4.800000e+01, 4486 iterations, 0.40 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   48.00000    0  240          -   48.00000      -     -    0s
     0     0   49.37500    0  284          -   49.37500      -     -    0s
     0     0   49.45000    0  311          -   49.45000      -     -    1s
     0     0   50.00000    0  163          -   50.00000      -     -    1s
     0     0   50.66667    0  146          -   50.66667      -     -    1s
     0     0   50.66667    0  173          -   50.66667      -     -    1s
     0     0   50.73684    0  188          -   50.73684      -     -    1s
     0     0   50.74510    0  245          -   50.74510      -     -    1s
     0     0   50.79167    0  179          -   50.79167      -     -    1s
     0     0   50.79167    0  266          -   50.79167      -     -    2s
     0     0   50.79167    0  203          -   50.79167      -     -    2s
     0     0   50.80180    0  386          -   50.80180      -     -    2s
     0     0   50.81300    0  406          -   50.81300      -     -    2s
     0     0   50.81469    0  418          -   50.81469      -     -    2s
     0     0   50.82906    0  421          -   50.82906      -     -    3s
     0     0   50.82931    0  418          -   50.82931      -     -    3s
     0     0   50.82931    0  424          -   50.82931      -     -    3s
     0     0   50.82947    0  407          -   50.82947      -     -    3s
     0     0   50.83519    0  385          -   50.83519      -     -    3s
     0     0   50.83519    0  398          -   50.83519      -     -    3s
     0     0   50.84018    0  423          -   50.84018      -     -    3s
     0     0   50.84026    0  431          -   50.84026      -     -    3s
     0     0   50.84343    0  407          -   50.84343      -     -    3s
     0     0   50.84372    0  415          -   50.84372      -     -    4s
     0     0   50.84673    0  400          -   50.84673      -     -    4s
     0     0   50.84673    0  409          -   50.84673      -     -    4s
     0     0   50.84706    0  413          -   50.84706      -     -    4s
     0     0   50.84792    0  401          -   50.84792      -     -    4s
     0     0   50.84970    0  390          -   50.84970      -     -    4s
     0     0   50.85034    0  410          -   50.85034      -     -    4s
     0     0   50.85185    0  419          -   50.85185      -     -    5s
     0     0   50.85185    0  419          -   50.85185      -     -    6s
     0     2   50.85185    0  419          -   50.85185      -     -   13s
     7     8   51.85185    3  372          -   50.85185      -   432   15s
    35    31   52.97531    9  320          -   51.85185      -   343   20s
   146   144   73.39737   54  520          -   51.85185      -   178   25s
*  196   188              67     110.0000000   51.85185  52.9%   195   27s

Cutting planes:
  Gomory: 5
  Zero half: 44

Explored 201 nodes (64021 simplex iterations) in 27.63 seconds
Thread count was 4 (of 4 available processors)

Solution count 1: 110 
Pool objective bound 52

Solution limit reached
Best objective 1.100000000000e+02, best bound 5.200000000000e+01, gap 52.7273%
Gurobi Runtime: 27.6317
[INFO] Suboptimal CGRA Mapping Found
MapperTimeout: 0
Mapped: 1

Operation Mapping Result:
mul0(mul): 0:pe_c1_r1.func.fu
const1(const): 0:pe_c1_r1.const.const
load2(load): 1:mem_0.mem_unit.mem
add3(add): 0:pe_c0_r0.func.fu
output4(output): 1:io_top_0.OE.io
add5(add): 0:pe_c2_r1.func.fu
const6(const): 0:pe_c2_r1.const.const

Connection Mapping Result:
load2_val_output:
  0:mem_0.mem_unit.data_out
  0:mem_0.out
  0:pe_c0_r0.func.in_a
  0:pe_c0_r0.in5
  0:pe_c0_r0.mux_a.in5
  0:pe_c0_r0.mux_a.mux
  0:pe_c0_r0.mux_a.out

add3_val_output:
  0:drf.in0
  0:drf.out1
  0:drf.out1_m5
  0:drf.reg5
  0:drf.reg5_m0
  0:io_top_0.in
  0:io_top_0.reg_in.in
  0:io_top_0.reg_in.reg
  0:pe_c0_r0.fu_to_rf
  0:pe_c0_r0.func.in_b
  0:pe_c0_r0.func.m_out
  0:pe_c0_r0.func.out
  0:pe_c0_r0.mux_b.in7
  0:pe_c0_r0.mux_b.mux
  0:pe_c0_r0.mux_b.out
  0:pe_c0_r0.mux_out.in0
  0:pe_c0_r0.mux_out.mux
  0:pe_c0_r0.mux_out.out
  0:pe_c0_r0.out
  0:pe_c0_r0.rf_to_muxout
  1:drf.reg5
  1:drf.reg5_fb
  1:io_top_0.OE.in
  1:io_top_0.reg_in.m_reg
  1:io_top_0.reg_in.out

add5_val_output:
  0:pe_c1_r1.func.in_b
  0:pe_c1_r1.in1
  0:pe_c1_r1.mux_b.in1
  0:pe_c1_r1.mux_b.mux
  0:pe_c1_r1.mux_b.out
  0:pe_c2_r1.fu_to_rf
  0:pe_c2_r1.func.in_a
  0:pe_c2_r1.func.m_out
  0:pe_c2_r1.func.out
  0:pe_c2_r1.mux_a.in6
  0:pe_c2_r1.mux_a.mux
  0:pe_c2_r1.mux_a.out
  0:pe_c2_r1.mux_out.in0
  0:pe_c2_r1.mux_out.mux
  0:pe_c2_r1.mux_out.out
  0:pe_c2_r1.out
  0:pe_c2_r1.rf_to_muxa
  0:pe_c2_r1.rf_to_muxout
  0:rf_c2_r1.in0
  0:rf_c2_r1.out0
  0:rf_c2_r1.out0_m1
  0:rf_c2_r1.out1
  0:rf_c2_r1.out1_m1
  0:rf_c2_r1.reg1
  0:rf_c2_r1.reg1_m0
  1:rf_c2_r1.reg1
  1:rf_c2_r1.reg1_fb

const1_val_output:
  0:pe_c1_r1.const.out
  0:pe_c1_r1.func.in_a
  0:pe_c1_r1.mux_a.in5
  0:pe_c1_r1.mux_a.mux
  0:pe_c1_r1.mux_a.out

mul0_val_output:
  0:drf.in3
  0:drf.out6
  0:drf.out6_m0
  0:drf.reg0
  0:drf.reg0_m3
  0:pe_c1_r1.fu_to_rf
  0:pe_c1_r1.func.m_out
  0:pe_c1_r1.func.out
  0:pe_c3_r0.fu_to_rf
  0:pe_c3_r0.func.in_a
  0:pe_c3_r0.func.m_in_a
  0:pe_c3_r0.func.out
  0:pe_c3_r0.mux_a.in7
  0:pe_c3_r0.mux_a.mux
  0:pe_c3_r0.mux_a.out
  0:pe_c3_r0.rf_to_muxa
  0:rf_c1_r1.in0
  0:rf_c1_r1.reg0
  0:rf_c1_r1.reg0_m0
  1:drf.reg0
  1:drf.reg0_fb
  1:mem_0.in1
  1:mem_0.mem_unit.addr
  1:mem_0.mux_addr.in1
  1:mem_0.mux_addr.mux
  1:mem_0.mux_addr.out
  1:pe_c1_r0.in2
  1:pe_c1_r0.mux_bypass.in2
  1:pe_c1_r0.mux_bypass.mux
  1:pe_c1_r0.mux_bypass.out
  1:pe_c1_r0.mux_out.in1
  1:pe_c1_r0.mux_out.mux
  1:pe_c1_r0.mux_out.out
  1:pe_c1_r0.out
  1:pe_c1_r1.mux_out.in0
  1:pe_c1_r1.mux_out.mux
  1:pe_c1_r1.mux_out.out
  1:pe_c1_r1.out
  1:pe_c1_r1.rf_to_muxout
  1:rf_c1_r1.out1
  1:rf_c1_r1.out1_m0

const6_val_output:
  0:pe_c2_r1.const.out
  0:pe_c2_r1.func.in_b
  0:pe_c2_r1.mux_b.in5
  0:pe_c2_r1.mux_b.mux
  0:pe_c2_r1.mux_b.out

make: Leaving directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
make: Entering directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
'cgrame' --II 2 --cpp 2 --arch-opts 'cols=4 rows=4' -g graph_loop.dot

CGRA - Modelling and Exploration Version 1.0 (http://cgra-me.ece.utoronto.ca/)
Copyright (c) 2015-2018 University of Toronto. All Rights Reserved.
For research and academic purposes only. Commercial use is prohibited.
Please email questions to: Xander Chin(xan@ece.utoronto.ca)
Compiled: May 16 2018 17:25:18

[INFO] Creating Architecture #2 from C++...
[INFO] Architecture Name: Adres CGRA Architecture
[INFO] Overwritting C++ Architecture Parameter: cols to 4 (Default: 4)
[INFO] Overwritting C++ Architecture Parameter: rows to 4 (Default: 4)
[INFO] Creating "Adres CGRA Architecture" Architecture from C++...
[INFO] Parsing DFG...
[INFO] Creating Mapper...
[INFO] Gurobi ILP Solver Specified
[INFO] Mapping DFG Onto CGRA Architecture...
Optimize a model with 33191 rows, 23760 columns and 89368 nonzeros
Variable types: 0 continuous, 23760 integer (23760 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 16008 rows and 9292 columns
Presolve time: 0.20s
Presolved: 17183 rows, 14468 columns, 54088 nonzeros
Variable types: 0 continuous, 14468 integer (14468 binary)

Root relaxation: objective 4.800000e+01, 4486 iterations, 0.40 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   48.00000    0  240          -   48.00000      -     -    0s
     0     0   49.37500    0  284          -   49.37500      -     -    0s
     0     0   49.45000    0  311          -   49.45000      -     -    1s
     0     0   50.00000    0  163          -   50.00000      -     -    1s
     0     0   50.66667    0  146          -   50.66667      -     -    1s
     0     0   50.66667    0  173          -   50.66667      -     -    1s
     0     0   50.73684    0  188          -   50.73684      -     -    1s
     0     0   50.74510    0  245          -   50.74510      -     -    1s
     0     0   50.79167    0  179          -   50.79167      -     -    1s
     0     0   50.79167    0  266          -   50.79167      -     -    1s
     0     0   50.79167    0  203          -   50.79167      -     -    2s
     0     0   50.80180    0  386          -   50.80180      -     -    2s
     0     0   50.81300    0  406          -   50.81300      -     -    2s
     0     0   50.81469    0  418          -   50.81469      -     -    2s
     0     0   50.82906    0  421          -   50.82906      -     -    2s
     0     0   50.82931    0  418          -   50.82931      -     -    2s
     0     0   50.82931    0  424          -   50.82931      -     -    2s
     0     0   50.82947    0  407          -   50.82947      -     -    3s
     0     0   50.83519    0  385          -   50.83519      -     -    3s
     0     0   50.83519    0  398          -   50.83519      -     -    3s
     0     0   50.84018    0  423          -   50.84018      -     -    3s
     0     0   50.84026    0  431          -   50.84026      -     -    3s
     0     0   50.84343    0  407          -   50.84343      -     -    3s
     0     0   50.84372    0  415          -   50.84372      -     -    3s
     0     0   50.84673    0  400          -   50.84673      -     -    3s
     0     0   50.84673    0  409          -   50.84673      -     -    4s
     0     0   50.84706    0  413          -   50.84706      -     -    4s
     0     0   50.84792    0  401          -   50.84792      -     -    4s
     0     0   50.84970    0  390          -   50.84970      -     -    4s
     0     0   50.85034    0  410          -   50.85034      -     -    4s
     0     0   50.85185    0  419          -   50.85185      -     -    4s
     0     0   50.85185    0  419          -   50.85185      -     -    6s
     0     2   50.85185    0  419          -   50.85185      -     -   13s
     9     8 infeasible    3               -   50.85185      -   415   15s
    49    46   53.00000   15   58          -   51.85185      -   273   20s
   163   159   77.00000   58  130          -   51.85185      -   188   25s
*  196   188              67     110.0000000   51.85185  52.9%   195   26s

Cutting planes:
  Gomory: 5
  Zero half: 44

Explored 201 nodes (64021 simplex iterations) in 26.40 seconds
Thread count was 4 (of 4 available processors)

Solution count 1: 110 
Pool objective bound 52

Solution limit reached
Best objective 1.100000000000e+02, best bound 5.200000000000e+01, gap 52.7273%
Gurobi Runtime: 26.4055
[INFO] Suboptimal CGRA Mapping Found
MapperTimeout: 0
Mapped: 1

Operation Mapping Result:
mul0(mul): 0:pe_c1_r1.func.fu
const1(const): 0:pe_c1_r1.const.const
load2(load): 1:mem_0.mem_unit.mem
add3(add): 0:pe_c0_r0.func.fu
output4(output): 1:io_top_0.OE.io
add5(add): 0:pe_c2_r1.func.fu
const6(const): 0:pe_c2_r1.const.const

Connection Mapping Result:
load2_val_output:
  0:mem_0.mem_unit.data_out
  0:mem_0.out
  0:pe_c0_r0.func.in_a
  0:pe_c0_r0.in5
  0:pe_c0_r0.mux_a.in5
  0:pe_c0_r0.mux_a.mux
  0:pe_c0_r0.mux_a.out

add3_val_output:
  0:drf.in0
  0:drf.out1
  0:drf.out1_m5
  0:drf.reg5
  0:drf.reg5_m0
  0:io_top_0.in
  0:io_top_0.reg_in.in
  0:io_top_0.reg_in.reg
  0:pe_c0_r0.fu_to_rf
  0:pe_c0_r0.func.in_b
  0:pe_c0_r0.func.m_out
  0:pe_c0_r0.func.out
  0:pe_c0_r0.mux_b.in7
  0:pe_c0_r0.mux_b.mux
  0:pe_c0_r0.mux_b.out
  0:pe_c0_r0.mux_out.in0
  0:pe_c0_r0.mux_out.mux
  0:pe_c0_r0.mux_out.out
  0:pe_c0_r0.out
  0:pe_c0_r0.rf_to_muxout
  1:drf.reg5
  1:drf.reg5_fb
  1:io_top_0.OE.in
  1:io_top_0.reg_in.m_reg
  1:io_top_0.reg_in.out

add5_val_output:
  0:pe_c1_r1.func.in_b
  0:pe_c1_r1.in1
  0:pe_c1_r1.mux_b.in1
  0:pe_c1_r1.mux_b.mux
  0:pe_c1_r1.mux_b.out
  0:pe_c2_r1.fu_to_rf
  0:pe_c2_r1.func.in_a
  0:pe_c2_r1.func.m_out
  0:pe_c2_r1.func.out
  0:pe_c2_r1.mux_a.in6
  0:pe_c2_r1.mux_a.mux
  0:pe_c2_r1.mux_a.out
  0:pe_c2_r1.mux_out.in0
  0:pe_c2_r1.mux_out.mux
  0:pe_c2_r1.mux_out.out
  0:pe_c2_r1.out
  0:pe_c2_r1.rf_to_muxa
  0:pe_c2_r1.rf_to_muxout
  0:rf_c2_r1.in0
  0:rf_c2_r1.out0
  0:rf_c2_r1.out0_m1
  0:rf_c2_r1.out1
  0:rf_c2_r1.out1_m1
  0:rf_c2_r1.reg1
  0:rf_c2_r1.reg1_m0
  1:rf_c2_r1.reg1
  1:rf_c2_r1.reg1_fb

const1_val_output:
  0:pe_c1_r1.const.out
  0:pe_c1_r1.func.in_a
  0:pe_c1_r1.mux_a.in5
  0:pe_c1_r1.mux_a.mux
  0:pe_c1_r1.mux_a.out

mul0_val_output:
  0:drf.in3
  0:drf.out6
  0:drf.out6_m0
  0:drf.reg0
  0:drf.reg0_m3
  0:pe_c1_r1.fu_to_rf
  0:pe_c1_r1.func.m_out
  0:pe_c1_r1.func.out
  0:pe_c3_r0.fu_to_rf
  0:pe_c3_r0.func.in_a
  0:pe_c3_r0.func.m_in_a
  0:pe_c3_r0.func.out
  0:pe_c3_r0.mux_a.in7
  0:pe_c3_r0.mux_a.mux
  0:pe_c3_r0.mux_a.out
  0:pe_c3_r0.rf_to_muxa
  0:rf_c1_r1.in0
  0:rf_c1_r1.reg0
  0:rf_c1_r1.reg0_m0
  1:drf.reg0
  1:drf.reg0_fb
  1:mem_0.in1
  1:mem_0.mem_unit.addr
  1:mem_0.mux_addr.in1
  1:mem_0.mux_addr.mux
  1:mem_0.mux_addr.out
  1:pe_c1_r0.in2
  1:pe_c1_r0.mux_bypass.in2
  1:pe_c1_r0.mux_bypass.mux
  1:pe_c1_r0.mux_bypass.out
  1:pe_c1_r0.mux_out.in1
  1:pe_c1_r0.mux_out.mux
  1:pe_c1_r0.mux_out.out
  1:pe_c1_r0.out
  1:pe_c1_r1.mux_out.in0
  1:pe_c1_r1.mux_out.mux
  1:pe_c1_r1.mux_out.out
  1:pe_c1_r1.out
  1:pe_c1_r1.rf_to_muxout
  1:rf_c1_r1.out1
  1:rf_c1_r1.out1_m0

const6_val_output:
  0:pe_c2_r1.const.out
  0:pe_c2_r1.func.in_b
  0:pe_c2_r1.mux_b.in5
  0:pe_c2_r1.mux_b.mux
  0:pe_c2_r1.mux_b.out

make: Leaving directory '/home/justinhai/Desktop/SummerResearch2018/CGRAframework/cgra-me-uoft/benchmarks/microbench/sum'
